local pref = require("pref")

local Mips32InstructionSet = pref.disassembler.createinstructionset(pref.datatype.UInt32)

Mips32InstructionSet[0x00000020] = { mnemonic = "ADD", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Add }
Mips32InstructionSet[0x20000000] = { mnemonic = "ADDI", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Add }
Mips32InstructionSet[0x24000000] = { mnemonic = "ADDIU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Add }
Mips32InstructionSet[0x00000021] = { mnemonic = "ADDU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Add }
Mips32InstructionSet[0x00000024] = { mnemonic = "AND", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.And }
Mips32InstructionSet[0x30000000] = { mnemonic = "ANDI", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.And }
Mips32InstructionSet[0x10000000] = { mnemonic = "BEQ", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x50000000] = { mnemonic = "BEQL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x04010000] = { mnemonic = "BGEZ", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x04110000] = { mnemonic = "BGEZAL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalCall }
Mips32InstructionSet[0x04130000] = { mnemonic = "BGEZALL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalCall }
Mips32InstructionSet[0x04030000] = { mnemonic = "BGEZL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x1C000000] = { mnemonic = "BGTZ", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x5C000000] = { mnemonic = "BGTZL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x18000000] = { mnemonic = "BLEZ", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x58000000] = { mnemonic = "BLEZL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x04000000] = { mnemonic = "BLTZ", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x04100000] = { mnemonic = "BLTZAL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalCall }
Mips32InstructionSet[0x04120000] = { mnemonic = "BLTZALL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalCall }
Mips32InstructionSet[0x04020000] = { mnemonic = "BLTZL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x14000000] = { mnemonic = "BNE", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x54000000] = { mnemonic = "BNEL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x0000000D] = { mnemonic = "BREAK", category = pref.disassembler.instructioncategory.InterruptTrap, type = pref.disassembler.instructiontype.Stop }
Mips32InstructionSet[0xBC000000] = { mnemonic = "CACHE", category = pref.disassembler.instructioncategory.Privileged, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000021] = { mnemonic = "CLO", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000020] = { mnemonic = "CLZ", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x0000001A] = { mnemonic = "DIV", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Div }
Mips32InstructionSet[0x0000001B] = { mnemonic = "DIVU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Div }
Mips32InstructionSet[0x000000C0] = { mnemonic = "EHB", category = pref.disassembler.instructioncategory.Undefined, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x08000000] = { mnemonic = "J", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Jump }
Mips32InstructionSet[0x0C000000] = { mnemonic = "JAL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Call }
Mips32InstructionSet[0x00000009] = { mnemonic = "JALR", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Call }
Mips32InstructionSet[0x00000008] = { mnemonic = "JR", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.Stop }
Mips32InstructionSet[0x80000000] = { mnemonic = "LB", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x90000000] = { mnemonic = "LBU", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x84000000] = { mnemonic = "LH", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x94000000] = { mnemonic = "LHU", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xC0000000] = { mnemonic = "LL", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x3C000000] = { mnemonic = "LUI", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x8C000000] = { mnemonic = "LW", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x88000000] = { mnemonic = "LWL", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x98000000] = { mnemonic = "LWR", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000000] = { mnemonic = "MADD", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000001] = { mnemonic = "MADDU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000010] = { mnemonic = "MFHI", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000012] = { mnemonic = "MFLO", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x0000000B] = { mnemonic = "MOVN", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x0000000A] = { mnemonic = "MOVZ", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000004] = { mnemonic = "MSUB", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000005] = { mnemonic = "MSUBU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000011] = { mnemonic = "MTHI", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000013] = { mnemonic = "MTLO", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x70000002] = { mnemonic = "MUL", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Mul }
Mips32InstructionSet[0x00000018] = { mnemonic = "MULT", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Mul }
Mips32InstructionSet[0x00000019] = { mnemonic = "MULTU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Mul }
Mips32InstructionSet[0x00000027] = { mnemonic = "NOR", category = pref.disassembler.instructioncategory.Logical, type = bit.bor(pref.disassembler.instructiontype.Not, pref.disassembler.instructiontype.Or) }
Mips32InstructionSet[0x00000025] = { mnemonic = "OR", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Or }
Mips32InstructionSet[0x34000000] = { mnemonic = "ORI", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Or }
Mips32InstructionSet[0x7C00003B] = { mnemonic = "RDHWR", category = pref.disassembler.instructioncategory.Privileged, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x41400000] = { mnemonic = "RDPGPR", category = pref.disassembler.instructioncategory.Privileged, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xA0000000] = { mnemonic = "SB", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xE0000000] = { mnemonic = "SC", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x7C000420] = { mnemonic = "SEB", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x7C000620] = { mnemonic = "SEH", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xA4000000] = { mnemonic = "SH", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000000] = { mnemonic = "SLL", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Lsl }
Mips32InstructionSet[0x00000004] = { mnemonic = "SLLV", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Lsl }
Mips32InstructionSet[0x0000002A] = { mnemonic = "SLT", category = pref.disassembler.instructioncategory.TestCompare, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x28000000] = { mnemonic = "SLTI", category = pref.disassembler.instructioncategory.TestCompare, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x2C000000] = { mnemonic = "SLTIU", category = pref.disassembler.instructioncategory.TestCompare, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x0000002B] = { mnemonic = "SLTU", category = pref.disassembler.instructioncategory.TestCompare, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000003] = { mnemonic = "SRA", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Asr }
Mips32InstructionSet[0x00000007] = { mnemonic = "SRAV", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Asr }
Mips32InstructionSet[0x00000002] = { mnemonic = "SRL", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Lsr }
Mips32InstructionSet[0x00000006] = { mnemonic = "SRLV", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Lsr }
Mips32InstructionSet[0x00000022] = { mnemonic = "SUB", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Sub }
Mips32InstructionSet[0x00000023] = { mnemonic = "SUBU", category = pref.disassembler.instructioncategory.Arithmetic, type = pref.disassembler.instructiontype.Sub }
Mips32InstructionSet[0xAC000000] = { mnemonic = "SW", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xA8000000] = { mnemonic = "SWL", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xB8000000] = { mnemonic = "SWR", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x0000000C] = { mnemonic = "SYSCALL", category = pref.disassembler.instructioncategory.InterruptTrap, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000030] = { mnemonic = "TGE", category = pref.disassembler.instructioncategory.InterruptTrap, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x00000026] = { mnemonic = "XOR", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Xor }
Mips32InstructionSet[0x38000000] = { mnemonic = "XORI", category = pref.disassembler.instructioncategory.Logical, type = pref.disassembler.instructiontype.Xor }

-- COP2 Instructions
Mips32InstructionSet[0x49000000] = { mnemonic = "BC2F", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalJump }
Mips32InstructionSet[0x49020000] = { mnemonic = "BC2FL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalJump }
Mips32InstructionSet[0x49010000] = { mnemonic = "BC2T", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalJump }
Mips32InstructionSet[0x49010000] = { mnemonic = "BC2TL", category = pref.disassembler.instructioncategory.ControlFlow, type = pref.disassembler.instructiontype.ConditionalJump }
Mips32InstructionSet[0x48400000] = { mnemonic = "CFC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x4A000000] = { mnemonic = "COP2", category = pref.disassembler.instructioncategory.Undefined, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x48C00000] = { mnemonic = "CTC2", category = pref.disassembler.instructioncategory.Undefined, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xD8000000] = { mnemonic = "LDC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xC8000000] = { mnemonic = "LWC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x48000000] = { mnemonic = "MFC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x48600000] = { mnemonic = "MFHC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x48800000] = { mnemonic = "MTC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0x48E00000] = { mnemonic = "MTHC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xF8000000] = { mnemonic = "SDC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }
Mips32InstructionSet[0xE8000000] = { mnemonic = "SWC2", category = pref.disassembler.instructioncategory.LoadStore, type = pref.disassembler.instructiontype.Undefined }

return Mips32InstructionSet